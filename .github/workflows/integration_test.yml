name: Brieflow Integration Test

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  integration-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Cache micromamba environment based on env file AND your code
      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: brieflow_main_env.yml
          cache-downloads: true
          cache-environment: true
          cache-environment-key: "${{ runner.os }}-${{ hashFiles('brieflow_main_env.yml') }}-${{ hashFiles('**/*.py', 'pyproject.toml') }}"
          micromamba-version: 'latest'

      # Cache the test data setup
      - name: Cache test data
        uses: actions/cache@v3
        id: test-data-cache
        with:
          path: tests/small_test_analysis
          key: small-test-analysis-${{ hashFiles('tests/small_test_analysis_setup.py') }}

      # Only run setup if cache miss
      - name: Run small test setup
        if: steps.test-data-cache.outputs.cache-hit != 'true'
        shell: bash -l {0}
        working-directory: tests/
        run: python small_test_analysis_setup.py

      # Cache Snakemake internal state and output files
      - name: Cache Snakemake results
        uses: actions/cache@v3
        id: snakemake-cache
        with:
          path: |
            tests/small_test_analysis/.snakemake
            tests/small_test_analysis/analysis_root
          key: snakemake-results-${{ hashFiles('workflow/Snakefile') }}

      - name: Run Snakemake pipeline
        shell: bash -l {0}
        working-directory: tests/small_test_analysis
        run: |
          snakemake \
            --cores all \
            --use-conda \
            --snakefile "../../workflow/Snakefile" \
            --configfile "config/config.yml" \
            --until all_preprocess

      - name: Run pytest
        shell: bash -l {0}
        run: pytest
